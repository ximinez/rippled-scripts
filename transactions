#!/bin/bash

set -e

ssh_host=professornormal
rpc_private=5015

rpc_ip=192.168.42.100
rpc_port=51235

accountfile="$( dirname $0 )/ripple-account.txt"
if [ -r ${accountfile} ]
then
  account=$(cat ${accountfile})
else
  account=rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh
fi

can_delete()
{
  set -o pipefail
  if [[ ${ssh_host} == $( hostname ) ]]
  then
    ~/bin/rippled -q --rpc_port=${rpc_private} can_delete $* | \
      jq '.result.can_delete'
  else
    ssh ${ssh_host} ~/bin/rippled -q --rpc_port=${rpc_private} can_delete $1 | \
      jq '.result.can_delete'
  fi
}

until last=$( can_delete ) && [[ ${last} != "null" ]]
do
  echo "Can not determine starting point (${last}). Will retry."
  sleep 60
done

echo Last checked ledger: $last
next=$(( ${last} + 1 ))

while true
do
  echo
  date
  echo Checking starting with ${next}
  time txs=$( ~/bin/rippled -q --rpc_ip=${rpc_ip} --rpc_port=${rpc_port} account_tx \
    -- ${account} ${next} -1 )

  error=$(echo ${txs} | jq '.error' )
  status=$(echo ${txs} | jq '.result.status' )
  if [[ ${error} != "null" ]]
  then
    echo Error: $error
    echo ${txs} | jq '[ .error_message, .error_what ]'
  elif [[ ${status} != '"success"' ]]
  then
    echo account_tx status: ${status}
    echo ${txs} | jq '[ .result.error, .result.error_message ]'
    sleep 60
    continue
  fi

  min=$( echo ${txs} | jq '.result.ledger_index_min' )
  max=$( echo ${txs} | jq '.result.ledger_index_max' )
  if [[ ${min} > ${next} ]]
  then
    echo rippled only has ${min}-${max}. Wait for backfill $(( ${min} - ${next} )) ledgers.
    sleep 60
    continue
  fi

  count=$( echo ${txs} | jq '.result.transactions | length' )
  echo Found ${count} txs in ${min}-${max}
  if [[ ${count} > 0 ]]
  then
    echo "${txs}" > transactions.${min}-${max}.txt
  fi
  can_delete ${max}
  next=$(( ${max} + 1 ))
  echo Updated can_delete to $( can_delete )

  # Delay enough time for a new ledger to close.
  sleep 6
done

