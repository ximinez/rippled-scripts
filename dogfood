#!/bin/bash

set -e
# set -x

gdb=""
gdbextra=""
clean=0
fast=0
test=0
while [[ ${#@} > 0 ]]
do
  if [[ "$1" == "fast" ]]
  then
    shift
    fast=1
  elif [[ "$1" == "debug" ]]
  then
    shift
    gdb="gdb -q --tui "
    gdbextra="--fg"
  elif [[ "$1" == "test" ]]
  then
    shift
    test=1
  elif [[ "$1" == "clean" ]]
  then
    shift
    clean=1
  elif [[ ${#gdb} > 0 && "$1" == "--" ]]
  then
    shift
    if [[ "${#@}" ]]
    then
      gdb="${gdb} ${@} "
      shift "${#@}"
    fi
  else
    echo "Unknown option: $1" 1>&2
    exit 127
  fi
done

if [[ ${#gdb} > 0 ]]
then
  gdb="${gdb} -ex run -ex quit --args"
fi

cmake_prefix=./build/cmake/
cmake_dirs=$(\ls -r ${cmake_prefix})
echo Dirs: ${cmake_dirs}
cmake_targets="rippled"
echo Targets: ${cmake_targets}

time (
  set -o pipefail
  rm -fv build/testrun.out
  if [[ ${clean} != 0 ]]
  then
    for dir in ${cmake_dirs}
    do
      dir=${cmake_prefix}${dir}
      cmake --build $dir --target clean | tee -a build/testrun.out || exit 1
    done
  fi

  # Determine if parallel unit tests are enabled.
  parallel_test=''
  for dir in ${cmake_dirs}
  do
    set -x
    dir=${cmake_prefix}${dir}
    cmake --build $dir -- -j8 | tee -a build/testrun.out || exit 1
    parallel_test=$( $dir/rippled --help |& grep -q unittest-jobs && \
      echo '--testjobs=8' )
    set +x
    # There's probably a smarter way to just get the first one, but lazy
    break
  done
  echo Parallel: ${parallel_test} | tee -a build/testrun.out

  # CMake
  if [[ ${fast} != 0 ]]
  then
    for dir in ${cmake_dirs}
    do
      dir=${cmake_prefix}${dir}
      for target in ${cmake_targets}
      do
        echo Building $target in $dir | tee -a build/testrun.out
        cmake --build $dir --target $target -- -j8 \
          | tee -a build/testrun.out || exit 1
      done
    done || exit 1
  else
    set -x
    ./Builds/Test.py -v -q --dir ${cmake_dirs} --target ${cmake_targets} \
      ${parallel_test} -- -j8 | tee build/testrun.out || exit 1
    set +x
  fi

) || exit 1

if [[ ${test} != 0 ]]
then
  exit 0
fi

set -x

if [ -e ~/rippled/debug.log ]
then
  mv -vi ~/rippled/debug.log{,.$(date '+%s')} || true
fi
gnome-terminal --geometry=80x30 -- tmux new-session -A -s rippled -x 80 -y 30 sleep 600
# Give the terminal a few seconds to create
sleep 2
for network in rippled # rippled-altnet
do
  if [ -e ~/${network}/debug.log ]
  then
    mv -vi ~/${network}/debug.log{,.$(date '+%s')} || true
  fi
  if [ -e ~/.config/ripple/${network}.cfg ]
  then
    for rundir in ${cmake_dirs}
    do
      tmux new-window -t rippled "${gdb} \
        ${cmake_prefix}${rundir}/rippled \
        --conf ~/.config/ripple/${network}.cfg --net ${gdbextra}"
      break
    done
  fi
done
